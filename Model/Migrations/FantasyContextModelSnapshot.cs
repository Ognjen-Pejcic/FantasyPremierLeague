// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace Model.Migrations
{
    [DbContext(typeof(FantasyContext))]
    partial class FantasyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.Domain.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AwayID")
                        .HasColumnType("int");

                    b.Property<int>("GameWeek")
                        .HasColumnType("int");

                    b.Property<int>("GoalsAwayTeam")
                        .HasColumnType("int");

                    b.Property<int>("GoalsHomeTeam")
                        .HasColumnType("int");

                    b.Property<int?>("HomeID")
                        .HasColumnType("int");

                    b.HasKey("GameId");

                    b.HasIndex("AwayID");

                    b.HasIndex("HomeID");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Model.Domain.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.HasKey("PlayerId");

                    b.HasIndex("TeamID");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Model.Domain.PlayerGameStatistics", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("CleanSheet")
                        .HasColumnType("bit");

                    b.Property<int>("GoalsConceded")
                        .HasColumnType("int");

                    b.Property<int>("MinutsPlayed")
                        .HasColumnType("int");

                    b.Property<int>("NumOfAssists")
                        .HasColumnType("int");

                    b.Property<int>("NumOfGoals")
                        .HasColumnType("int");

                    b.Property<int>("NumOfOwnGoals")
                        .HasColumnType("int");

                    b.Property<int>("NumOfSaves")
                        .HasColumnType("int");

                    b.Property<int>("PenaltiesMissed")
                        .HasColumnType("int");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<bool>("RedCard")
                        .HasColumnType("bit");

                    b.Property<bool>("YellowCard")
                        .HasColumnType("bit");

                    b.HasKey("PlayerId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("PlayerGameStatistics");
                });

            modelBuilder.Entity("Model.Domain.Squad", b =>
                {
                    b.Property<int>("SquadId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Benched1")
                        .HasColumnType("int");

                    b.Property<int>("Benched2")
                        .HasColumnType("int");

                    b.Property<int>("Benched3")
                        .HasColumnType("int");

                    b.Property<int>("Captain")
                        .HasColumnType("int");

                    b.Property<int>("GameWeek")
                        .HasColumnType("int");

                    b.Property<int>("ViceCaptain")
                        .HasColumnType("int");

                    b.HasKey("SquadId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("Squads");
                });

            modelBuilder.Entity("Model.Domain.Team", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            ID = 5,
                            TeamName = "Leeds"
                        });
                });

            modelBuilder.Entity("Model.Domain.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlayerSquad", b =>
                {
                    b.Property<int>("PlayersPlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SquadsSquadId")
                        .HasColumnType("int");

                    b.Property<int>("SquadsUserId")
                        .HasColumnType("int");

                    b.HasKey("PlayersPlayerId", "SquadsSquadId", "SquadsUserId");

                    b.HasIndex("SquadsSquadId", "SquadsUserId");

                    b.ToTable("PlayerSquad");
                });

            modelBuilder.Entity("Model.Domain.Game", b =>
                {
                    b.HasOne("Model.Domain.Team", "Away")
                        .WithMany()
                        .HasForeignKey("AwayID");

                    b.HasOne("Model.Domain.Team", "Home")
                        .WithMany()
                        .HasForeignKey("HomeID");

                    b.Navigation("Away");

                    b.Navigation("Home");
                });

            modelBuilder.Entity("Model.Domain.Player", b =>
                {
                    b.HasOne("Model.Domain.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamID");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Model.Domain.PlayerGameStatistics", b =>
                {
                    b.HasOne("Model.Domain.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Domain.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Model.Domain.Squad", b =>
                {
                    b.HasOne("Model.Domain.User", "User")
                        .WithMany("Squads")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PlayerSquad", b =>
                {
                    b.HasOne("Model.Domain.Player", null)
                        .WithMany()
                        .HasForeignKey("PlayersPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Model.Domain.Squad", null)
                        .WithMany()
                        .HasForeignKey("SquadsSquadId", "SquadsUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Model.Domain.Team", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("Model.Domain.User", b =>
                {
                    b.Navigation("Squads");
                });
#pragma warning restore 612, 618
        }
    }
}
